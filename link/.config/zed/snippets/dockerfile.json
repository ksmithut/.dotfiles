{
	"Node Dockerfile": {
		"prefix": "node",
		"description": "The Node Boilerplate for a Dockerfile",
		"body": [
			"FROM node:20-alpine",
			"",
			"# Needed for bcrypt",
			"# RUN apk --no-cache add --virtual builds-deps build-base python2",
			"",
			"# Create app directory",
			"RUN mkdir -p /app && chown node:node /app",
			"USER node",
			"WORKDIR /app",
			"",
			"# Install dependencies",
			"COPY --chown=node:node package.json yarn.lock ./",
			"RUN yarn --frozen-lockfile --production",
			"",
			"# Bundle app source",
			"COPY --chown=node:node src src",
			"",
			"# Exports",
			"EXPOSE 3000",
			"CMD [ \"node\", \"src/bin/app.js\" ]",
			"",
		]
	},
	"Node Multi-Step Dockerfile": {
		"prefix": "node-multistep",
		"description": "A multistep node dockerfile",
		"body": [
			"FROM node:20-alpine AS base",
			"",
			"# Needed for bcrypt",
			"# RUN apk --no-cache add --virtual builds-deps build-base python2",
			"",
			"# Create app directory",
			"RUN mkdir -p /app && chown node:node /app",
			"USER node",
			"WORKDIR /app",
			"",
			"# Install dependencies",
			"COPY --chown=node:node package.json yarn.lock ./",
			"RUN yarn --frozen-lockfile",
			"",
			"# Bundle app source",
			"COPY --chown=node:node src src",
			"",
			"# Release layer",
			"FROM node:16-alpine AS release",
			"",
			"# Needed for bcrypt",
			"# RUN apk --no-cache add --virtual builds-deps build-base python2",
			"",
			"# Create app directory",
			"RUN mkdir -p /app && chown node:node /app",
			"USER node",
			"WORKDIR /app",
			"",
			"# Install dependencies",
			"COPY --chown=node:node --from=base /app/package.json /app/yarn.lock ./",
			"RUN yarn --frozen-lockfile --production",
			"",
			"# Bundle app source",
			"COPY --chown=node:node --from=base /app/src src",
			"",
			"# Exports",
			"EXPOSE 3000",
			"CMD [ \"node\", \"src/bin/app.js\" ]",
			""
		]
	},
	"Static Dockerfile": {
		"prefix": "static",
		"description": "The Boilerplate for a Dockerfile to serve static assets",
		"body": [
			"FROM node:20-alpine",
			"",
			"# Create app directory",
			"RUN mkdir -p /app && chown node:node /app",
			"USER node",
			"WORKDIR /app",
			"",
			"# Install dependencies",
			"COPY --chown=node:node package.json yarn.lock ./",
			"RUN yarn --frozen-lockfile --production",
			"",
			"# Bundle app source",
			"COPY --chown=node:node src src",
			"",
			"# Build bundle static files",
			"RUN yarn build",
			"",
			"# --- Release with Alpine ----",
			"FROM nginx:alpine AS release",
			"",
			"# Install app dependencies",
			"COPY --from=base /app/dist /usr/share/nginx/html",
			"",
		]
	}
}
